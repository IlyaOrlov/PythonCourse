Рабочая папка для слушателей курса. Пожалуйста, создавайте свои подпапки, называя их по своей фамилии (на английском)
и сохраняйте в них результаты выполнения заданий.

Для работы с репозиторием можно установить git и использовать следующий порядок действий:

Регистрируетесь на guithub.com и подписываетесь на данный репозиторий нажимая кнопку Watch справа вверху.
На рабочем компьютере выполняете команду "git clone https://github.com/IlyaOrlov/PythonCourse.git",
чтоб скачать репозиторий через https, либо git clone git@github.com:IlyaOrlov/PythonCourse.git - для скачивания через ssh.
Первый вариант попроще и не требует дополнительных усилий. Второй вариант потребует от вас разобраться с настройкой ssh
(https://help.github.com/articles/connecting-to-github-with-ssh/).
По умолчанию вы будете находится на бранче master. Начиная работу над новым заданием, создайте свой бранч, с помощью
следующей команды: "git checkout -b my_branch", где my_branch - название вашего бранча (английскими буквами без пробелов),
которое вы ему придумаете.
Публикуете эту ветку в удаленном репозитории: git push --set-upstream origin my_branch
В папке Practice создаете подпапку (если еще не создали), называете ее по своей фамилии, и добавляете туда скрипт с
выполненным заданием (например, mytest.py), либо делаете всяческие изменения в своих скриптах.
Вносите файл под контроль git с помощью команды "git add" (например, git add mytest.py)
Коммитите изменения (чтобы git присвоил им номер версии): git commit -m "Любой разумный комментарий к сделанным изменениям"
Подтягиваете последние изменения из общего репозитория: git pull origin master
Публикуете свои изменения на своем бранче в удаленном репозитории на сервере: git push
Зайдя на страницу репозитория в гитхабе (https://github.com/IlyaOrlov/PythonCourse), в списке Branch выбираете свой бранч
 и нажимаете New pull request, чтоб запросить внесение изменений с вашего бранча в master бранч.
Пункты 1-2 выполняются однократно. Пункты 3-4, 10 - при работе над каждым новым заданием. Пункты 5-9 при каждом изменении,
 которое вы собираетесь публиковать.
Если вы предпочитаете командной строке работу с визуальным интерфейсом - можно скачать и установить приложение TortoiseGit
(https://tortoisegit.org/download/) и выполнить пункты 3-9 в нем. Также TortoiseGit - удобная штука для разрешения конфликтов,
которые могут возникнуть после шага 8.